upstream devocto {
    server unix:///tmp/app.sock; # for a file socket
    #server 127.0.0.1:8001; # for a web port socket (we'll use this first)
}

server {

        # if ($host = octocolumn.com) {
        #         return 301 https://www.octocolumn.com$request_uri;
        # } # managed by Certbot
        # return 301 https://www.octocolumn.com$request_uri;

        # if ($host = www.octocolumn.com) {
        #         return 301 https://$host$request_uri;
        # } # managed by Certbot

        listen 80;
        listen [::]:80  ipv6only=on;
        server_name www.octocolumn.com;
        charset utf-8;
        client_max_body_size 128M;

        location / {
        uwsgi_pass      devocto;
        uwsgi_param     HTTP_X_FORWARDED_PROTO $scheme;
        include         uwsgi_params;
        }

}

# pc 설정 SSL
# server {

        # listen 443 ssl default;
        # ssl on;
        # charset utf-8;
        # server_name octocolumn.com www.octocolumn.com m.octocolumn.com;

        # # gzip off;

        # # SSL Settings

        # ssl_certificate /etc/letsencrypt/live/www.octocolumn.com/fullchain.pem; # managed by Certbot
        # ssl_certificate_key /etc/letsencrypt/live/www.octocolumn.com/privkey.pemm; # managed by Certbot

        # client_max_body_size 128M;

        # location / {
        # uwsgi_pass      devocto;
        # uwsgi_param     HTTP_X_FORWARDED_PROTO $scheme;
        # include         uwsgi_params;

        # proxy_redirect     off;
        # proxy_set_header   Host $host;
        # proxy_set_header   X-Real-IP $remote_addr;
        # proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header   X-Forwarded-Host $server_name;
        # proxy_set_header   X-NginX-Proxy true;
        # proxy_buffering    off;
        # }

        # # manage CERTBOT
        # location ~ ^/\.well-known {
        # root /var/www/ghost;
        # allow all;
        # }


# }
